---
title: The Velodyne VLP16
---

## The Velodyne VLP16

{% image src="https://ouster.imgix.net/OUSTER_product1-Post.jpg?ixlib=js-3.8.0&q=75&auto=format%2Ccompress&w=1200&max-w=2048" width="500px" /%}

The VLP 16 is our main LiDAR sensor. It's a 16 line LiDAR, hence its name.

Here are some important links:

- [VLP16 main page](https://ouster.com/products/hardware/vlp-16) - Propaganda information.
- [VLP16 datasheets and manuals](https://ouster.com/downloads/velodyne-downloads)
- [VLP16 ROS2 Driver GitHub repository](https://github.com/ros-drivers/velodyne/)

### Using the Velodyne

You'll need to download/clone the velodyne ROS2 drivers from [the "ros-drivers/velodyne" github repo](https://github.com/ros-drivers/velodyne/). You compile it like you would compile any other ROS2 package. After cloning the repo, make sure you are on the correct branch of the repo. Depending on what installation of ROS2 you have, you may need to switch to the correct branch. For example, if you are using ROS2 galactic, you would need to switch (git switch or checkout) to the `galactic` branch (ROS2 branch should be fine for humble). As everyone is probably using humble, you dont have to switch branches. Then you can compile the package with the following commands: 

```
# Switch ros2 to the branch you want to clone if necessary
git clone git clone https://github.com/ros-drivers/velodyne/ -b ros2

# Then you have to source the environment
. /opt/ros/humble/setup.bash

# Then you can build the package
colcon build --symlink-install

# Source the workspace
. install/setup.bash
```

You then want to power the LiDAR on, plug everything in and set up the network (see below). 

#### Setting up the Network

Note that this section was derived from the manual. If anything here doesn't work, refer to the manual for further clarification.

In the terminal run the following command to set up the network:

```
nm-connection-editor
```

There may already be a "Velodyne" ethernet connection in NetworkManager, if so, skip to the activation step.

If not, you will need to create a new connection, by clicking the `+` button in the bottom left corner. Select `Ethernet` from the dropdown menu and click `Create`. Name the connection as "Velodyne" and then navigate to the "IPv4 Settings" tab. Now we need to add the addresses for it by clicking `Add`. Give the velodyne static ip as "192.168.1.200". Set the mask as "255.255.255.0" and the gateway as "255.255.255.255"

Once the network has been set up, the Velodyne can be configured in a web console made available by typing the IP address  "192.168.1.201" on a web browser. (yes, this is different from the IP address assigned to the network interface).

#### Activating the Velodyne Network

To activate the Velodyne network configuration, run the command.

```
nmcli connection up Velodyne
```

Run the command `ip -br a` to verify that the network interface corresponding to the velodyne is `UP` and it should be color coded green.

#### Troubleshooting

First, verify that the velodyne is actually turned on. You should hear a dim continuous hum from the velodyne coming from the internal motor that spins the laser. Additionally, when you place your hand on the velodyne you should feel a continous vibration.

If the network interface is down most of the time but it is spinning, you may have a hardware fault. One of the most frequent issues we have with out LiDAR is that the wires inside the interface box come loose. You can open the interface box and check the wires to see if they are connected properly. if they are not connected properly, you can try reconnecting them. Make sure the power is off before you do this!.     

#### Running the Velodyne

Once the network is set up, you can run the velodyne driver with the following command:

```	
ros2 launch velodyne velodyne-all-nodes-VLP16-composed-launch.py
```

