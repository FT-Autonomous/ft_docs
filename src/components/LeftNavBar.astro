---
import { getCollection, getEntry } from 'astro:content';

const tutorialEntries = await getCollection('tutorials');
const equipmentEntries = await getCollection('equipment');
const resourceEntries = await getCollection('resources');
const guidelineEntries = await getCollection('guidelines');

import * as DepartmentsContext from "../content/departments/config.ts";
const departmentEntries = (await Promise.all(DepartmentsContext.slugOrder.map(e => getEntry('departments', e)))).flatMap(f => f ? [f] : []);
import * as Theme from "../theme.ts";
---
<style define:vars={ Theme }>

ul {
  list-style-type: none;
  padding-left: 0px;
}

.left li {
  text-align: right;
}

ul li a {
  color: var(--foregroundColor); /* Ensure links are white */
  text-decoration: none; /* Remove underlines */
}

ul li a:hover {
  color: var(--linkHoverColor); /* Use the new hover color */
}

.dropdown-content {
  display: none;
  padding-left: 20px;
}

.dropdown-content a {
  color: var(--foregroundColor);
  padding: 5px 0;
  display: block;
  text-decoration: none; /* Remove underlines */
}

.dropdown-content a:hover {
  color: var(--linkHoverColor);
}

.dropdown-button::before {
  content: "▸";
  padding-right: 0.5em;
}

.show::before {
  content: "▼";
}

.dropdown-button {
  cursor: pointer;
  color: var(--linkColor);
  position: relative;
}

.dropdown-button:hover { color: var(--linkHoverColor) }
.show ~ .dropdown-content {
  display: block;
  animation: ease-in 1s;
}
</style>
<script>
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.dropdown-button').forEach(button => {
    button.addEventListener('click', event => {
      // Close all dropdowns
      document.querySelectorAll('.dropdown-button').forEach(content => {
        content.classList.remove('show');
      });
      (event.target as HTMLButtonElement).classList.toggle('show');
    });
  });
});
</script>
<h2>Departments</h2>
<ul>
  {departmentEntries.map(department => (
    <li class="dropdown">
      <span class="dropdown-button">{department.data.title}</span>
      <div class="dropdown-content">
        <a href={`/${department.slug}`}>Overview</a>
        <a href={`/${department.slug}-theory`}>Theory</a>
      </div>
    </li>
  ))}
</ul>
<h2>Tutorials</h2>
<ul>{tutorialEntries.map(tutorial => (<li> <a href={`/${tutorial.slug}`}>{tutorial.data.title}</a> </li>))} </ul>
<h2>Equipment</h2>
<ul>{equipmentEntries.map(equipment => (<li> <a href={`/${equipment.slug}`}>{equipment.data.title}</a> </li>))} </ul>
<h2>Resources</h2>
<ul>{resourceEntries.map(resource => (<li> <a href={`/${resource.slug}`}>{resource.data.title}</a> </li>))} </ul>
<h2>Guidelines</h2>
<ul>{guidelineEntries.map(guideline => (<li> <a href={`/${guideline.slug}`}>{guideline.data.title}</a> </li>))} </ul>
