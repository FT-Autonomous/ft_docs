---
import { getCollection, getEntry } from 'astro:content';
const codeEntries = await getCollection('tutorials');
const depts = await getCollection('departments');
import * as Context from "../content/departments/config.ts";
const departmentEntries = (await Promise.all(Context.slugOrder.map(e => getEntry('departments', e)))).flatMap(f => f ? [f] : []);
import * as Theme from "../theme.ts";

// Remove duplicates by using a Set or filtering logic
const uniqueDepartmentEntries = Array.from(new Set(departmentEntries.map(dept => dept.slug)))
  .map(slug => departmentEntries.find(dept => dept.slug === slug));
---
<style define:vars={ Theme }>
ul {
  list-style-type: none;
  padding-left: 0px;
}
ul li {
  background: none; /* No background for list items */
  padding-top: 1px;
  padding-bottom: 1px;
  position: relative;
}
ul li a {
  color: var(--linkColor); /* Red color for links */
  text-decoration: underline; /* Add underline to main links */
}
ul li a:hover {
  color: var(--linkHoverColor); /* Bright Red color for hovered links */
}
.dropdown-content {
  display: none;
  background-color: var(--backgroundColor); /* Match website background */
  padding-left: 20px;
}
.dropdown-content a {
  color: var(--foregroundColor); /* White text color */
  padding: 5px 0;
  text-decoration: underline; /* Add underline to subtabs */
  display: block;
  position: relative;
}
.dropdown-content a:hover {
  color: var(--linkHoverColor); /* Bright Red color for hovered links */
  text-decoration: underline; /* Add underline on hover */
}
.dropdown-content a::after {
  content: '▸'; /* Right-facing arrow */
  position: absolute;
  right: 10px;
  font-size: 0.8em; /* Adjust as needed */
  transition: transform 0.3s;
}
.dropdown-btn {
  cursor: pointer;
  text-decoration: underline;
  color: var(--linkColor); /* Red color for main tabs */
  position: relative;
}

/* .dropdown-btn::after {
  content: '▼'; /* Downward-facing arrow */
  position: absolute;
  right: -20px; /* Adjust as needed */
  font-size: 0.8em; /* Adjust as needed */
} */

.dropdown-btn:hover {
  color: var(--linkHoverColor); /* Bright Red color for hovered main tabs */
}
.show {
  display: block;
}
</style>
<script>
document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('.dropdown-btn').forEach(function(btn) {
    btn.addEventListener('click', function(event) {
      // Close all dropdowns
      document.querySelectorAll('.dropdown-content').forEach(function(content) {
        content.classList.remove('show');
      });
      // Open the clicked dropdown
      const dropdownContent = event.currentTarget.nextElementSibling;
      dropdownContent.classList.toggle('show');
    });
  });
});
</script>
<h2>Departments</h2>
<ul>
  {uniqueDepartmentEntries.map(department => (
    <li class="dropdown">
      <span class="dropdown-btn">{department.data.title}</span>
      <div class="dropdown-content">
        <a href={`/${department.slug}`}>Overview</a>
        <a href={`/${department.slug}-theory`}>Theory</a>
      </div>
    </li>
  ))}
</ul>
<h2>Guides and Tutorials</h2>
<ul>
  {codeEntries.map(tutorial => (
    <li class="dropdown">
      <span class="dropdown-btn">{tutorial.data.title}</span>
      <div class="dropdown-content">
        <a href={`/${tutorial.slug}`}>{tutorial.data.title}</a>
      </div>
    </li>
  ))}
</ul>