---
import Layout from "../layouts/Layout.astro";
import { getCollection, getEntry } from "astro:content";

export const prerender = true;

export async function getStaticPaths() {
  const collections = ["departments", "tutorials", "equipment", "resources", "guidelines"];
  const paths = [];

  for (const name of collections) {
    const entries = await getCollection(name);
    for (const entry of entries) {
      // ✅ entry.slug is like 'zed2', we pair it with its collection name
      paths.push({
        params: { slug: `${name}/${entry.slug}` }, // MUST be string here
        props: { collection: name, slug: entry.slug, entry },
      });
    }
  }

  return paths;
}

const fullSlug = Astro.params.slug; // string like 'equipment/zed2'
const [collectionName, ...rest] = fullSlug.split("/");
const slug = rest.join("/");

let entry;

if (import.meta.env.SSR) {
  entry = await getEntry(collectionName, slug);
} else {
  entry = Astro.props.entry;
}

const title = entry?.data.title ?? "Not Found";
const { Content } = entry ? await entry.render() : { Content: () => null };
---

{entry ? (
  <Layout title={title} includeNavBar currentSlug={`${collectionName}/${slug}`}>
    <div style={{ paddingLeft: "15px", paddingRight: "15px" }}>
      <Content />
      <footer style={{ marginTop: "2rem" }}>
        <a href="/">← Back Home</a>
      </footer>
    </div>
  </Layout>
) : (
  <Layout title="Not Found" includeNavBar>
    <div style={{ padding: "2rem" }}>
      <h1>404: Not Found</h1>
      <a href="/">← Back Home</a>
    </div>
  </Layout>
)}
